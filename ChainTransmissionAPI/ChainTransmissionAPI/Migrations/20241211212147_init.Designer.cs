// <auto-generated />
using ChainTransmissionAPI.Models.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ChainTransmissionAPI.Migrations
{
    [DbContext(typeof(ChainTransmissionContext))]
    [Migration("20241211212147_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ChainTransmissionAPI.Models.AssemblyUnit", b =>
                {
                    b.Property<int>("KSE")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("KSE"));

                    b.Property<string>("NSE")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SM")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TSE")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("UnitKU")
                        .HasColumnType("integer");

                    b.Property<string>("s")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("t")
                        .HasColumnType("double precision");

                    b.HasKey("KSE");

                    b.HasIndex("UnitKU");

                    b.ToTable("AssemblyUnits");
                });

            modelBuilder.Entity("ChainTransmissionAPI.Models.Part", b =>
                {
                    b.Property<int>("KD")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("KD"));

                    b.Property<int?>("AssemblyUnitKSE")
                        .HasColumnType("integer");

                    b.Property<string>("ND")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NaD")
                        .HasColumnType("text");

                    b.Property<string>("TD")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VD")
                        .HasColumnType("text");

                    b.Property<int?>("z")
                        .HasColumnType("integer");

                    b.HasKey("KD");

                    b.HasIndex("AssemblyUnitKSE");

                    b.ToTable("Parts");
                });

            modelBuilder.Entity("ChainTransmissionAPI.Models.Unit", b =>
                {
                    b.Property<int>("KU")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("KU"));

                    b.Property<double>("N")
                        .HasColumnType("double precision");

                    b.Property<string>("NU")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TN")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TU")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VU")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("KU");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("ChainTransmissionAPI.Models.AssemblyUnit", b =>
                {
                    b.HasOne("ChainTransmissionAPI.Models.Unit", "Unit")
                        .WithMany("AssemblyUnits")
                        .HasForeignKey("UnitKU");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("ChainTransmissionAPI.Models.Part", b =>
                {
                    b.HasOne("ChainTransmissionAPI.Models.AssemblyUnit", "AssemblyUnit")
                        .WithMany("Parts")
                        .HasForeignKey("AssemblyUnitKSE");

                    b.Navigation("AssemblyUnit");
                });

            modelBuilder.Entity("ChainTransmissionAPI.Models.AssemblyUnit", b =>
                {
                    b.Navigation("Parts");
                });

            modelBuilder.Entity("ChainTransmissionAPI.Models.Unit", b =>
                {
                    b.Navigation("AssemblyUnits");
                });
#pragma warning restore 612, 618
        }
    }
}
